@using UniversityApp.Core.Entities
@model GroupsViewModel
@{
	ViewData["Title"] = "Groups";
}

<div class="container d-flex flex-row justify-content-center">
	<a class="btn btn-primary" asp-action="Create">New group</a>
</div>

@{
	if (Model == null || !Model.Groups.Any())
	{
		<h4>No group found</h4>
	}
	else
	{
		<h2>Groups:</h2>
		if(Model.CourseId != null)
		{
			var course = Model.Groups.First().Course;
			<span>
				With course
				<span class="fw-bold">@course.Name</span>
				<span class="text-secondary">@course.Id</span>
			</span>
		}
		<ul class="list-group">
			@foreach (var item in Model.Groups)
			{
				var classesDelete = "btn btn-outline-danger";
				if (!item.CanDelete())
				{
					classesDelete += " disabled";
				}
				<li class="list-group-item d-flex flex-row justify-content-between">
					<a class="text-dark text-decoration-none d-flex flex-column justify-content-center" asp-action="Group" asp-route-id="@item.Id">@item.Name</a>
					<div class="d-flex gap-2 flex-row justify-content-between">
						<a class="btn btn-outline-primary" asp-action="Group" asp-route-id="@item.Id">Info</a>
						<a class="btn btn-outline-primary" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
						<form method="post" asp-action="Delete" asp-route-id="@item.Id">
							<input class="@classesDelete" type="submit" value="Delete" />
						</form>
					</div>
				</li>
			}
		</ul>
	}
}